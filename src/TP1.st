Object subclass: #AlgoPedidos	instanceVariableNames: 'usuarios'	classVariableNames: ''	package: 'TP1		'!!AlgoPedidos methodsFor: 'initialization' stamp: 'AlejoVillores 10/28/2020 09:13'!initialize 	usuarios := OrderedCollection new.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:19'!agregarProductoConNombre: unNombre precio: unPrecio yCantidad: unaCantidad para: unUsuario	"Pre: REcibe los datos del producto y el nombre del usuario que lo compra	Post: Agrega el producto al pediddo"	|  producto |		producto := Producto conNombre: unNombre  precio:unPrecio  yCantidad:unaCantidad .	(usuarios detect: [ :usuario | usuario nombre = unUsuario] ifNone: [ UsuarioNoEncontradoError signal]) agregarProducto: producto. ! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:18'!actualizarProductoConNombre: unProducto  conCantidad: nuevaCantidad para: unUsuario	"Pre: Recibe el nombre del pedido , del usuario  y una nueva cantidad	Post: Actualiza la cantidad"	(usuarios detect: [ :usuario | usuario nombre = unUsuario] ifNone: [ UsuarioNoEncontradoError signal])actualizarProductoConNombre: unProducto  conCantidad: nuevaCantidad.		! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 12:20'!crearPedidoConDeliveryPara: unNombre 	"Pre: Nombre del usuario	Post: Agrega un usuario con recargo"	usuarios add:(Usuario conNombre: unNombre yRecargo:20).! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:19'!cantidadProductosEnPedidoDe: unUsuario 	"Pre: Recibe un nombre de usuario	Post: Devuelve la cantidad de productos totales"	 ^ (usuarios detect: [ :usuario | usuario nombre = unUsuario] ifNone: [ UsuarioNoEncontradoError signal ] ) cantidadDeProductos ! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:20'!removerProductoConNombre: unNombre  para: unUsuario	"Pre: Recibe un nombre de usuario y el nombre del producto a eliminar 	Post: Remueve el producto"	(usuarios detect: [ :usuario | usuario nombre = unUsuario] ifNone: [ UsuarioNoEncontradoError signal ] ) removerConNombre: unNombre! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 09:24'!crearPedidoParaRetirarPara: unNombre	"Pre: Recibe un nombre	Post: Agregar un objeto Usuario con el nombre pasado por parametro a la collection." 	usuarios add:(Usuario conNombre: unNombre ).! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:29'!agregarCuponAPedidoDe: unUsuario  conValor: unValor 	"Pre: Recibe un nombre de usuario y un valor del descuento	Post: Agrega el descuento al pedido" 	(usuarios detect: [ :usuario | usuario nombre = unUsuario] ifNone: [ UsuarioNoEncontradoError signal ] ) agregarCuponConValor: unValor.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:19'!removerCuponDePedidoDe: unUsuario 	"Pre: Recibe un usuario	Post: Fija el cupon en 0 ,equivale a no hay cupon"	(usuarios detect: [ :usuario | usuario nombre = unUsuario] ifNone: [ UsuarioNoEncontradoError signal ] ) removerCupon ! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:22'!removerMenuConNombre: unNombre para: unUsuario.	"Pre: Recibe un nombre de usuario y el nombre del menu a eliminar 	Post: Remueve el menu"	(usuarios detect: [ :usuario | usuario nombre = unUsuario] ifNone: [ UsuarioNoEncontradoError signal ] ) removerMenuConNombre: unNombre! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:17'!agregarMenuConNombre: unNombre precio: unPrecio yCantidad: unaCantidad para: unUsuario	"Pre: Recibe un nombre , un precio y una cantidad , ademas del usuario	Post := Agrega el menu al pedido "	| menu | 		menu := Producto conNombre: unNombre  precio:unPrecio  yCantidad:unaCantidad .	(usuarios detect: [ :usuario | usuario nombre = unUsuario] ifNone: [ UsuarioNoEncontradoError signal ] ) agregarMenu: menu.		 		! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:36'!agregarCuponAPedidoDe: unUsuario  conPorcentaje: unDecuento	"Pre: Recibe un nombre de usuario y un porcentaje del descuento	Post: Agrega el descuento al pedido" 	(usuarios detect: [ :usuario | usuario nombre = unUsuario] ifNone: [ UsuarioNoEncontradoError signal]) agregarCuponConPorcentaje:unDecuento.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 18:02'!precioPedidoDe: unUsuario	"Pre: Recibe un nombre de usuario	Post: Precio total a pagar"	^ (usuarios detect: [ :usuario | usuario nombre = unUsuario] ifNone: [ UsuarioNoEncontradoError signal ] ) realizarPago! !Object subclass: #Cupon	instanceVariableNames: 'valorPorcentual valorFijo'	classVariableNames: ''	package: 'TP1		'!!Cupon methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/7/2020 18:28'!establecerPorcentual: unValorPorcentual! !!Cupon methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/7/2020 18:28'!establecerFijo: unValorFijo! !!Cupon methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/7/2020 18:29'!aplicarCuponA: unTotal! !!Cupon methodsFor: 'initialization' stamp: 'AlejoVillores 11/7/2020 18:27'!initialize	valorFijo := 0.	valorPorcentual := 0.! !Cupon subclass: #CuponActivo	instanceVariableNames: 'valorPorcentual valorFijo'	classVariableNames: ''	package: 'TP1		'!!CuponActivo methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/2/2020 09:37'!establecerPorcentual: unValorPorcentual	valorPorcentual := (unValorPorcentual / 100) .! !!CuponActivo methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/2/2020 09:32'!establecerFijo: unValorFijo	valorFijo := unValorFijo .! !!CuponActivo methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 18:02'!aplicarCuponA: unTotal	"Pre: Recibe un total	Post: Devuelve el descuento aplicado a ese total"	^ (valorFijo ) + (unTotal * valorPorcentual )! !!CuponActivo methodsFor: 'initialization' stamp: 'AlejoVillores 11/7/2020 18:30'!initialize	valorFijo := 0.	valorPorcentual := 0.! !Cupon subclass: #CuponInactivo	instanceVariableNames: 'valorPorcentual valorFijo'	classVariableNames: ''	package: 'TP1		'!!CuponInactivo methodsFor: 'initialization' stamp: 'AlejoVillores 11/7/2020 18:31'!initialize	valorFijo := 0.	valorPorcentual := 0.! !!CuponInactivo methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/2/2020 09:39'!establecerPorcentual: unValorPorcentual	valorPorcentual := 0 .! !!CuponInactivo methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/2/2020 09:39'!establecerFijo: unValorFijo	valorFijo := 0 .! !!CuponInactivo methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 18:03'!aplicarCuponA: unTotal	"Pre: Recibe un total	Post: Devuelve el descuento aplicado a ese total que en este caso es ninguno"	^ 0. ! !Object subclass: #Delivery	instanceVariableNames: 'aumento'	classVariableNames: ''	package: 'TP1		'!!Delivery methodsFor: 'initialization' stamp: 'AlejoVillores 11/1/2020 19:01'!initialize	aumento := 0! !!Delivery methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/1/2020 19:01'!establecerAumento: unAumento	aumento := unAumento ! !!Delivery methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/1/2020 19:02'!aplicarAumento: unTotal 	"Pre:Recibe un total del pedido	Post:Devuelve el aumento a ese total"	^ unTotal * (aumento / 100)! !Object subclass: #Pedido	instanceVariableNames: 'pedibles recargoPorDelivery total cupon'	classVariableNames: ''	package: 'TP1		'!!Pedido methodsFor: 'initialization' stamp: 'AlejoVillores 11/2/2020 09:22'!initialize	pedibles := OrderedCollection new.	total := 0.	recargoPorDelivery := Delivery new.	cupon := CuponActivo  new.	! !!Pedido methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/2/2020 09:35'!calcularPedido	"Pre: -	Post: Devuelve el precio final a pagar"	total := pedibles inject: 0 into: [ :acumulador :pedible  | acumulador  + (pedible precioFinal)]. 		^ total + (recargoPorDelivery  aplicarAumento: total )  - (cupon aplicarCuponA: total).! !!Pedido methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/2/2020 09:25'!removerCupon	"Pre: -	Post: Reinicia los valores del cupon a 0"	cupon := CuponActivo new .! !!Pedido methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 18:05'!delivery: unAumento 	"Pre: Recibe un aumento	Post: establece el aumento"	recargoPorDelivery  establecerAumento:  unAumento .! !!Pedido methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 10:12'!agregarProducto: unProducto	"Pre: Recibe un objeto producto	Post: Agrega el producto a la collection"	pedibles add: unProducto .! !!Pedido methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:43'!actualizarProductoConNombre: unProducto  conCantidad: nuevaCantidad	"Pre: Recibe el nombre y la nueva cantidad del producto a cambiar	Post: Cambia la cantidad del producto"	(pedibles detect: [ :aquel | aquel nombre = unProducto ] ifNone: [ProductoNoEncontradoError signal]) establecerCantidad: nuevaCantidad .! !!Pedido methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 18:04'!agregarCuponConValor: unValor	"Pre: Recibe un valor	Post: Asigna el valor al cupon"	cupon establecerFijo: unValor . ! !!Pedido methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/29/2020 17:35'!removerConNombre: unNombre	"Elimina el producto"	pedibles  remove: (pedibles detect: [ :aquel | aquel nombre = unNombre ]).! !!Pedido methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 18:04'!agregarMenu: unMenu.	"Pre: Recibe unmenu	Post: Asigna el menu a pedibles y desactiva el cupon"	self agregarProducto: unMenu .	"Se desactiva el cupon"	cupon := CuponInactivo new.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 18:05'!cantidadDeProductos	"Pre: -	Post: Devuelve la cantidad de productos que posee el pedido"	^ pedibles inject: 0 into: [ :acumulador :pedible  | acumulador  + pedible cantidad].! !!Pedido methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 18:03'!agregarCuponConPorcentaje: unDecuento	"Pre: Recibe un porcentaje	Post: Asigna el porcentaje al cupon"	cupon establecerPorcentual: unDecuento  . ! !!Pedido methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:21'!removerMenuConNombre: unNombre	"Elimina el producto y activa el cupon"	pedibles  remove: (pedibles detect: [ :aquel | aquel nombre = unNombre ]).	cupon := CuponActivo new.! !Error subclass: #PedidoConCeroError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1		'!Error subclass: #PorcentajeNoDisponibleError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1		'!Object subclass: #Producto	instanceVariableNames: 'nombre precio cantidad'	classVariableNames: ''	package: 'TP1		'!!Producto methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 10:09'!establecerNombre: unNombre.	"Pre: Recibe un nombre	¨Post: Agregar el nombre a la variable de instancia"	nombre := unNombre .! !!Producto methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 10:09'!establecerPrecio:unPrecio	"Pre: Recibe un precio	¨Post: Agregar un precio a la variable de instancia"	precio := unPrecio .! !!Producto methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:42'!establecerCantidad:unaCantidad	"Pre: Recibe una cantidad	¨Post: Agregar la cantidad a la variable de instancia"	(unaCantidad <= 0) ifTrue: [ PedidoConCeroError signal ].	cantidad := unaCantidad .! !!Producto methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 10:10'!precioFinal	"Pre: -	Post: Devuelvel el precio final del producto"	^ (precio * cantidad )! !!Producto methodsFor: 'accessing' stamp: 'AlejoVillores 11/8/2020 18:06'!nombre	"Pre: -	Post: Devuelve el nombre"	^ nombre ! !!Producto methodsFor: 'accessing' stamp: 'AlejoVillores 11/8/2020 18:06'!cantidad	"Pre: -	Post: Devuelve la cantidad"	^ cantidad.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Producto class	instanceVariableNames: ''!!Producto class methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 09:58'!conNombre: unNombre  precio:unPrecio  yCantidad:unaCantidad 	| producto |	producto := self new.	producto establecerNombre: unNombre.	producto establecerPrecio:unPrecio.	producto establecerCantidad:unaCantidad.	^ producto.! !Error subclass: #ProductoNoEncontradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1		'!Object subclass: #Usuario	instanceVariableNames: 'nombre pedido'	classVariableNames: ''	package: 'TP1		'!!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/29/2020 17:11'!actualizarProductoConNombre: unProducto  conCantidad: nuevaCantidad	"Pre: Recibe el nombre del producto y la nueva cantidad	Post: Delega la tarea al pedido"	pedido actualizarProductoConNombre: unProducto  conCantidad: nuevaCantidad.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 09:22'!establecerNombre: unNombre	"Pre: Recibe un objeto String	Post: Establece el nombre"	nombre := unNombre ! !!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/29/2020 17:18'!agregarCuponConValor: unValor 	"Pre:  Recibe el descuento del cupon"	"Post: Delega la tarea al pedido"	pedido agregarCuponConValor: unValor .! !!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 10:11'!agregarProducto: unProducto	"Pre: Recibe un objeto producto	Post: Agrega el producto al pedido"	pedido agregarProducto: unProducto! !!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 10:10'!nombre	"Pre: nombre instanciado	Post: Devuelve el nombre del objeto"	^ nombre! !!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 10:11'!realizarPago	"Pre: -	Post: Realiza el pagon final."	^ pedido calcularPedido! !!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 18:07'!removerCupon	"Pre: -	Post: Remueve el cupon"	pedido removerCupon ! !!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 18:07'!removerConNombre: unNombre	"Pre: Recibe un nombre	Post: Remueve el producto"	pedido removerConNombre: unNombre.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/29/2020 16:38'!agregarMenu: unMenu		"Pre: Recibe un objeto menu	Post: Agrega el menu al pedido"	pedido agregarMenu: unMenu.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 18:06'!cantidadDeProductos	"Pre: -	Post: Devuelve la cantidad de productos"	^ pedido cantidadDeProductos ! !!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 09:37'!agregarCuponConPorcentaje:unDecuento	"Pre:  Recibe el descuento del cupon"	"Post: Delega la tarea al pedido"	(unDecuento > 100) 		ifTrue: [ PorcentajeNoDisponibleError signal ].	pedido agregarCuponConPorcentaje:unDecuento	! !!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/8/2020 18:07'!removerMenuConNombre: unNombre	"Pre: Recibe un nombre	Post: Remueve el menu" 	pedido removerMenuConNombre: unNombre! !!Usuario methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 12:19'!paraDelivery: unAumento	pedido delivery: unAumento ! !!Usuario methodsFor: 'initialization' stamp: 'AlejoVillores 10/28/2020 10:01'!initialize 	pedido := Pedido new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: ''!!Usuario class methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 10/28/2020 09:21'!conNombre: unNombre	| usuario |	usuario := self new.	usuario establecerNombre:unNombre.		^ usuario	  ! !!Usuario class methodsFor: 'as yet unclassified' stamp: 'AlejoVillores 11/1/2020 19:06'!conNombre: unNombre yRecargo: unRecago	| usuario |	usuario := self new.	usuario establecerNombre:unNombre.	usuario paraDelivery:(unRecago).	^ usuario .	! !Error subclass: #UsuarioNoEncontradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1		'!